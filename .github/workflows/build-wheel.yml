name: Build custom_rasterizer wheel (Python 3.11, CUDA 12.5)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:12.5.0-devel-ubuntu22.04  # Updated to CUDA 12.5
    defaults:
      run:
        shell: bash

    steps:
      - name: Install Git and clone repo
        run: |
          apt-get update
          apt-get install -y git
          git clone --recurse-submodules https://github.com/Adhi-Git-hub/custom_rasterizer_wheel.git .
          ls -la

      - name: Install Python and build tools
        run: |
          apt-get install -y python3.11 python3.11-dev python3-pip build-essential ninja-build
          ln -s /usr/bin/python3.11 /usr/bin/python

      - name: Install PyTorch with CUDA 12.1 (compatible with 12.5)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install torch==2.2.0+cu121 torchvision==0.17.0+cu121 --index-url https://download.pytorch.org/whl/cu121

      - name: Patch for CUDA 12.5 compatibility
        run: |
          # Update all CUDA version references
          find . -type f \( -name "*.cpp" -o -name "*.cu" -o -name "*.h" \) -exec sed -i 's/11\.0/12.5/g' {} +
          find . -type f \( -name "*.cpp" -o -name "*.cu" -o -name "*.h" \) -exec sed -i 's/110/125/g' {} +

      - name: Build the wheel
        run: |
          export CUDA_HOME=/usr/local/cuda
          export PATH=/usr/local/cuda/bin:$PATH
          export TORCH_CUDA_ARCH_LIST="8.0 8.6 9.0"  # Updated architectures
          export FORCE_CUDA=1
          
          python setup.py bdist_wheel

      - name: Verify wheel compatibility
        run: |
          pip install patchelf
          unzip -d tmp_wheel dist/*.whl
          find tmp_wheel -name "*.so" -exec patchelf --print-needed {} \; | grep cuda
        

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: custom_rasterizer-cuda12.5-wheel
          path: dist/*.whl
